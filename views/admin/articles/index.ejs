<!-- Page Header -->
<div class="flex justify-between items-center mb-6">
    <div>
        <h2 class="text-2xl font-bold text-gray-900">Articles Management</h2>
        <p class="mt-1 text-sm text-gray-600">Manage articles and content</p>
    </div>
    <div>
        <button onclick="openCreateModal()"
            class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-lg flex items-center">
            <i class="fas fa-plus mr-2"></i>
            Add New Article
        </button>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="bg-white rounded-lg shadow p-4 mb-6">
    <div class="flex flex-col md:flex-row gap-4">
        <!-- Live Search -->
        <div class="flex-1">
            <div class="relative">
                <input type="text" id="searchInput" placeholder="Search by title or content..." value="<%= search %>"
                    class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-gray-400"></i>
                </div>
            </div>
        </div>

        <!-- Category Filter -->
        <div class="md:w-48">
            <select id="categoryFilter"
                class="w-full py-2 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                <option value="">All Categories</option>
                <% categories.forEach(cat=> { %>
                    <option value="<%= cat.id %>" <%=category==cat.id ? 'selected' : '' %>><%= cat.name %>
                    </option>
                    <% }); %>
            </select>
        </div>

        <!-- Status Filter -->
        <div class="md:w-48">
            <select id="statusFilter"
                class="w-full py-2 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                <option value="">All Status</option>
                <option value="published" <%=status==='published' ? 'selected' : '' %>>Published</option>
                <option value="draft" <%=status==='draft' ? 'selected' : '' %>>Draft</option>
            </select>
        </div>

        <!-- Clear Filters Button -->
        <div class="md:w-32 flex items-end">
            <button id="clearFilters"
                class="w-full bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors"
                style="<% if (!search && !category && !status) { %>display: none;<% } %>">
                <i class="fas fa-times mr-1"></i>
                Clear
            </button>
        </div>
    </div>

    <!-- Search Results Info -->
    <div id="searchInfo" class="mt-3 text-sm text-gray-600" <% if (!search && !category && !status) { %>style="display:
        none;"<% } %>>
            <% if (search || category || status) { %>
                <i class="fas fa-info-circle mr-1"></i>
                Showing results
                <% if (search) { %>for "<%= search %>"<% } %>
                            <% if (category) { %>
                                <% const selectedCategory=categories.find(cat=> cat.id == category); %>
                                    in category: <%= selectedCategory ? selectedCategory.name : '' %>
                                        <% } %>
                                            <% if (status) { %>with status: <%= status %>
                                                    <% } %>
                                                        <% } %>
    </div>
</div>

<!-- Articles Table -->
<div class="bg-white rounded-lg shadow overflow-hidden">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead>
                <tr class="bg-primary-light">
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Title
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Status
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Created
                        At</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Actions
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                <% if (articles && Array.isArray(articles) && articles.length> 0) { %>
                    <% articles.forEach(article=> { %>
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="h-12 w-10 flex-shrink-0">
                                        <% if (article.cover) { %>
                                            <img class="h-12 w-10 object-cover rounded" src="<%= article.cover %>"
                                                alt="<%= article.name %>">
                                            <% } else { %>
                                                <div
                                                    class="h-12 w-10 rounded bg-primary-light flex items-center justify-center">
                                                    <i class="fas fa-book text-primary"></i>
                                                </div>
                                                <% } %>
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900">
                                            <%= article.title%>
                                        </div>
                                        <span class="text-xs text-gray-400">
                                            <%= article.category_name %>
                                        </span>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span
                                    class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= article.is_published ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                                    <%= article.is_published ? 'Published' : 'Draft' %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= new Date(article.created_at).toLocaleDateString() %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <div class="flex space-x-2">
                                    <button class="edit-btn text-primary hover:text-primary-dark" title="Edit"
                                        data-id="<%- article.id %>" data-title="<%- article.title %>"
                                        data-content="<%- article.content %>"
                                        data-categorie_id="<%- article.categorie_id || '' %>"
                                        data-cover="<%- article.cover || '' %>"
                                        data-is_published="<%- article.is_published %>">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick="confirmDelete('<%- article.id %>')"
                                        class="text-red-600 hover:text-red-800" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                                        No articles found
                                    </td>
                                </tr>
                                <% } %>
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <% if (totalPages> 1) { %>
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="flex-1 flex justify-between sm:hidden">
                <% if (currentPage> 1) { %>
                    <% let prevUrl='?page=' + (currentPage - 1); if (search) prevUrl +='&search=' +
                        encodeURIComponent(search); if (category) prevUrl +='&category=' + encodeURIComponent(category);
                        if (status) prevUrl +='&status=' + encodeURIComponent(status); %>
                        <a href="<%= prevUrl %>"
                            class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                            Previous
                        </a>
                        <% } %>
                            <% if (currentPage < totalPages) { %>
                                <% let nextUrl='?page=' + (currentPage + 1); if (search) nextUrl +='&search=' +
                                    encodeURIComponent(search); if (category) nextUrl +='&category=' +
                                    encodeURIComponent(category); if (status) nextUrl +='&status=' +
                                    encodeURIComponent(status); %>
                                    <a href="<%= nextUrl %>"
                                        class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                        Next
                                    </a>
                                    <% } %>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing page <span class="font-medium">
                            <%= currentPage %>
                        </span> of <span class="font-medium">
                            <%= totalPages %>
                        </span>
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        <% if (currentPage> 1) { %>
                            <% let prevUrl='?page=' + (currentPage - 1); if (search) prevUrl +='&search=' +
                                encodeURIComponent(search); if (category) prevUrl +='&category=' +
                                encodeURIComponent(category); if (status) prevUrl +='&status=' +
                                encodeURIComponent(status); %>
                                <a href="<%= prevUrl %>"
                                    class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <span class="sr-only">Previous</span>
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                                <% } %>

                                    <% for(let i=1; i <=totalPages; i++) { %>
                                        <% let pageUrl='?page=' + i; if (search) pageUrl +='&search=' +
                                            encodeURIComponent(search); if (category) pageUrl +='&category=' +
                                            encodeURIComponent(category); if (status) pageUrl +='&status=' +
                                            encodeURIComponent(status); %>
                                            <a href="<%= pageUrl %>"
                                                class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium <%= currentPage === i ? 'text-primary-dark bg-primary-light z-10' : 'text-gray-500 hover:bg-gray-50' %>">
                                                <%= i %>
                                            </a>
                                            <% } %>

                                                <% if (currentPage < totalPages) { %>
                                                    <% let nextUrl='?page=' + (currentPage + 1); if (search) nextUrl
                                                        +='&search=' + encodeURIComponent(search); if (category) nextUrl
                                                        +='&category=' + encodeURIComponent(category); if (status)
                                                        nextUrl +='&status=' + encodeURIComponent(status); %>
                                                        <a href="<%= nextUrl %>"
                                                            class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                            <span class="sr-only">Next</span>
                                                            <i class="fas fa-chevron-right"></i>
                                                        </a>
                                                        <% } %>
                    </nav>
                </div>
            </div>
        </div>
        <% } %>
</div>

<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/articles.js"></script>

<style>
    /* Toggle Switch Styles */
    .toggle-switch input:checked + div {
        background-color: #10B981;
    }
    
    .toggle-switch input:checked + div .dot {
        transform: translateX(24px);
    }
    
    .toggle-switch .dot {
        transition: transform 0.3s ease;
    }
</style>

<!-- Create Article Modal -->
<div id="createArticleModal" class="fixed inset-0 bg-black bg-opacity-40 hidden flex items-center justify-center z-50 p-4">
    <div class="bg-white rounded-xl shadow-xl w-full max-w-3xl p-8 overflow-y-auto max-h-[90vh] relative">
        <h3 class="text-2xl font-semibold text-gray-900 mb-8">Create New Article</h3>
        <form id="createArticleForm" action="/dashboard/articles" method="POST" enctype="multipart/form-data" class="space-y-8">
            <div>
                <label for="title" class="block text-gray-800 text-sm font-semibold mb-2">Title <span class="text-red-500">*</span></label>
                <input type="text" id="title" name="title" required
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
            </div>
            <div>
                <label for="category" class="block text-gray-800 text-sm font-semibold mb-2">Category <span class="text-red-500">*</span></label>
                <select id="category" name="categorie_id" required
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
                    <option value="">Select Category</option>
                    <% categories.forEach(cat => { %>
                        <option value="<%= cat.id %>"><%= cat.name %></option>
                    <% }); %>
                </select>
            </div>
            <div>
                <label for="cover" class="block text-gray-800 text-sm font-semibold mb-2">Cover Image</label>
                <input type="file" id="cover" name="cover" accept="image/*"
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
                <p class="text-xs text-gray-500 mt-1">Supported formats: JPG, JPEG, PNG, GIF (Max 5MB)</p>
            </div>
            <div>
                <label class="block text-gray-800 text-sm font-semibold mb-2">Publish Status</label>
                <div class="flex items-center">
                    <label class="inline-flex items-center cursor-pointer toggle-switch">
                        <input type="checkbox" id="is_published" name="is_published" class="sr-only">
                        <div class="relative">
                            <div class="block bg-gray-600 w-14 h-8 rounded-full"></div>
                            <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                        </div>
                        <div class="ml-3 text-gray-700 font-medium">
                            <span class="status-text">Draft</span>
                        </div>
                    </label>
                </div>
            </div>
            <div>
                <label for="content" class="block text-gray-800 text-sm font-semibold mb-2">Content <span class="text-red-500">*</span></label>
                <textarea id="content" name="content" rows="10"
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition"></textarea>
            </div>
            <div class="flex items-center justify-end space-x-4 pt-6 border-t border-gray-200">
                <button type="button" onclick="closeCreateModal()"
                    class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-400 transition">
                    Cancel
                </button>
                <button type="submit"
                    class="bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition">
                    Create
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Article Modal -->
<div id="editArticleModal" class="fixed inset-0 bg-black bg-opacity-40 hidden flex items-center justify-center z-50 p-4">
    <div class="bg-white rounded-xl shadow-xl w-full max-w-3xl p-8 overflow-y-auto max-h-[90vh] relative">
        <h3 class="text-2xl font-semibold text-gray-900 mb-8">Edit Article</h3>
        <form id="editArticleForm" method="POST" enctype="multipart/form-data" class="space-y-8">
            <input type="hidden" id="editArticleId" name="id">
            <div>
                <label for="editTitle" class="block text-gray-800 text-sm font-semibold mb-2">Title <span class="text-red-500">*</span></label>
                <input type="text" id="editTitle" name="title" required
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
            </div>
            <div>
                <label for="editCategory" class="block text-gray-800 text-sm font-semibold mb-2">Category <span class="text-red-500">*</span></label>
                <select id="editCategory" name="categorie_id" required
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
                    <option value="">Select Category</option>
                    <% categories.forEach(cat => { %>
                        <option value="<%= cat.id %>"><%= cat.name %></option>
                    <% }); %>
                </select>
            </div>
            <div>
                <label for="editCover" class="block text-gray-800 text-sm font-semibold mb-2">Cover Image</label>
                <input type="file" id="editCover" name="cover" accept="image/*"
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition">
                <p class="text-xs text-gray-500 mt-1">Supported formats: JPG, JPEG, PNG, GIF (Max 5MB)</p>
                <div id="currentCoverContainer" class="mt-2">
                    <img id="currentCoverImage" src="" alt="Current Cover" class="h-20 w-auto rounded">
                </div>
            </div>
            <div>
                <label class="block text-gray-800 text-sm font-semibold mb-2">Publish Status</label>
                <div class="flex items-center">
                    <label class="inline-flex items-center cursor-pointer toggle-switch">
                        <input type="checkbox" id="editIsPublished" name="is_published" class="sr-only">
                        <div class="relative">
                            <div class="block bg-gray-600 w-14 h-8 rounded-full"></div>
                            <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                        </div>
                        <div class="ml-3 text-gray-700 font-medium">
                            <span class="status-text" id="editStatusText">Draft</span>
                        </div>
                    </label>
                </div>
            </div>
            <div>
                <label for="editContent" class="block text-gray-800 text-sm font-semibold mb-2">Content <span class="text-red-500">*</span></label>
                <textarea id="editContent" name="content" rows="10"
                    class="w-full rounded-md border border-gray-300 px-4 py-2 text-gray-900 placeholder-gray-400 focus:border-primary focus:ring-2 focus:ring-primary focus:outline-none transition"></textarea>
            </div>
            <div class="flex items-center justify-end space-x-4 pt-6 border-t border-gray-200">
                <button type="button" onclick="closeEditModal()"
                    class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-400 transition">
                    Cancel
                </button>
                <button type="submit"
                    class="bg-primary hover:bg-primary-dark text-white font-semibold py-2 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary transition">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    // Modal open/close functions
    function openCreateModal() {
        // Reset form fields
        const form = document.getElementById('createArticleForm');
        form.reset();

        // Reset toggle switch to unchecked and update UI
        const isPublishedToggle = document.getElementById('is_published');
        isPublishedToggle.checked = false;
        updateToggleSwitch('is_published', false);

        // Clear CKEditor content if initialized
        if (window.contentEditor) {
            window.contentEditor.setData('');
        }

        document.getElementById('createArticleModal').classList.remove('hidden');
    }

    function closeCreateModal() {
        document.getElementById('createArticleModal').classList.add('hidden');
    }

    // Toggle switch update function
    function updateToggleSwitch(toggleId, isChecked) {
        const toggle = document.getElementById(toggleId);
        const toggleContainer = toggle.parentElement;
        const background = toggleContainer.querySelector('div > div');
        const dot = toggleContainer.querySelector('.dot');
        const textSpan = toggleContainer.querySelector('.status-text');
        
        if (isChecked) {
            background.classList.remove('bg-gray-600');
            background.classList.add('bg-green-500');
            dot.style.transform = 'translateX(24px)';
            textSpan.textContent = 'Published';
        } else {
            background.classList.remove('bg-green-500');
            background.classList.add('bg-gray-600');
            dot.style.transform = 'translateX(0px)';
            textSpan.textContent = 'Draft';
        }
    }

    // Initialize toggle switch state and event listener
    document.addEventListener('DOMContentLoaded', function() {
        const isPublishedToggle = document.getElementById('is_published');
        updateToggleSwitch('is_published', isPublishedToggle.checked);
        isPublishedToggle.addEventListener('change', function() {
            updateToggleSwitch('is_published', this.checked);
        });

        // Initialize CKEditor for content textarea
        ClassicEditor
            .create(document.querySelector('#content'))
            .then(editor => {
                window.contentEditor = editor;

                // Add form submit event listener for validation
                const form = document.getElementById('createArticleForm');
                form.addEventListener('submit', function(event) {
                    const contentData = window.contentEditor.getData().trim();
                    if (!contentData) {
                        event.preventDefault();
                        alert('Content is required.');
                        window.contentEditor.editing.view.focus();
                        return;
                    }
                    // Check cover file size
                    const coverInput = document.getElementById('cover');
                    if (coverInput.files.length > 0) {
                        const file = coverInput.files[0];
                        const maxSize = 5 * 1024 * 1024; // 5MB in bytes
                        if (file.size > maxSize) {
                            event.preventDefault();
                            Swal.fire({
                                icon: 'error',
                                title: 'File too large',
                                text: 'File tidak boleh lebih dari 5MB',
                            });
                            return;
                        }
                    }
                });
            })
            .catch(error => {
                console.error(error);
            });

        // Edit modal related code
        const editModal = document.getElementById('editArticleModal');
        const editForm = document.getElementById('editArticleForm');
        const editTitle = document.getElementById('editTitle');
        const editCategory = document.getElementById('editCategory');
        const editCover = document.getElementById('editCover');
        const editIsPublished = document.getElementById('editIsPublished');
        const editStatusText = document.getElementById('editStatusText');
        const editArticleId = document.getElementById('editArticleId');
        const currentCoverImage = document.getElementById('currentCoverImage');
        let editContentEditor;

        function openEditModal(article) {
            editArticleId.value = article.id;
            editTitle.value = article.title;
            editCategory.value = article.categorie_id || '';
            editIsPublished.checked = article.is_published;
            updateToggleSwitch('editIsPublished', editIsPublished.checked);
            editStatusText.textContent = editIsPublished.checked ? 'Published' : 'Draft';
            currentCoverImage.src = article.cover || '';
            if (!article.cover) {
                currentCoverImage.style.display = 'none';
            } else {
                currentCoverImage.style.display = 'block';
            }
            editCover.value = ''; // Clear file input

            if (editContentEditor) {
                editContentEditor.setData(article.content || '');
            }

            editModal.classList.remove('hidden');
        }

        function closeEditModal() {
            editModal.classList.add('hidden');
        }

        // Attach event listeners to edit buttons
        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', () => {
                const article = {
                    id: button.getAttribute('data-id'),
                    title: button.getAttribute('data-title'),
                    categorie_id: button.getAttribute('data-categorie_id'),
                    cover: button.getAttribute('data-cover'),
                    is_published: button.getAttribute('data-is_published') === 'true',
                    content: button.getAttribute('data-content'),
                };
                openEditModal(article);
            });
        });

        // Initialize CKEditor for edit content textarea
        ClassicEditor
            .create(document.querySelector('#editContent'))
            .then(editor => {
                editContentEditor = editor;

                // Add form submit event listener for validation
                editForm.addEventListener('submit', function(event) {
                    const contentData = editContentEditor.getData().trim();
                    if (!contentData) {
                        event.preventDefault();
                        alert('Content is required.');
                        editContentEditor.editing.view.focus();
                        return;
                    }
                    // Check cover file size
                    if (editCover.files.length > 0) {
                        const file = editCover.files[0];
                        const maxSize = 5 * 1024 * 1024; // 5MB in bytes
                        if (file.size > maxSize) {
                            event.preventDefault();
                            Swal.fire({
                                icon: 'error',
                                title: 'File too large',
                                text: 'File tidak boleh lebih dari 5MB',
                            });
                            return;
                        }
                    }
                });
            })
            .catch(error => {
                console.error(error);
            });

        // Toggle switch event listener for edit modal
        editIsPublished.addEventListener('change', function() {
            updateToggleSwitch('editIsPublished', this.checked);
            editStatusText.textContent = this.checked ? 'Published' : 'Draft';
        });

        // Expose closeEditModal to global scope for button onclick
        window.closeEditModal = closeEditModal;
    });
</script>
