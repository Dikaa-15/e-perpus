<!-- Page Header -->
<div class="flex justify-between items-center mb-6">
    <div>
        <h2 class="text-2xl font-bold text-gray-900">Loans Management</h2>
        <p class="mt-1 text-sm text-gray-600">Manage book loans and returns</p>
    </div>
    <div>
        <button onclick="openCreateModal()" class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-lg flex items-center">
            <i class="fas fa-plus mr-2"></i>
            Add New Loan
        </button>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="bg-white rounded-lg shadow p-4 mb-6">
    <div class="flex flex-col md:flex-row gap-4">
        <!-- Live Search -->
        <div class="flex-1">
            <label for="searchInput" class="block text-sm font-medium text-gray-700 mb-2">Search Loans</label>
            <div class="relative">
                <input 
                    type="text" 
                    id="searchInput" 
                    placeholder="Search by user name or book name..." 
                    value="<%= search %>"
                    class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                >
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-gray-400"></i>
                </div>
            </div>
        </div>
        
        <!-- Status Filter -->
        <div class="md:w-48">
            <label for="statusFilter" class="block text-sm font-medium text-gray-700 mb-2">Filter by Status</label>
            <select 
                id="statusFilter" 
                class="w-full py-2 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            >
                <option value="">All Status</option>
                <option value="borrowed" <%= status === 'borrowed' ? 'selected' : '' %>>Borrowed</option>
                <option value="returned" <%= status === 'returned' ? 'selected' : '' %>>Returned</option>
                <option value="overdue" <%= status === 'overdue' ? 'selected' : '' %>>Overdue</option>
            </select>
        </div>

        <!-- Date Filter -->
        <div class="md:w-64">
            <label class="block text-sm font-medium text-gray-700 mb-2">Filter by Loan Date & Return Date</label>
            <div class="flex space-x-2">
                <input 
                    type="date" 
                    id="startDateFilter" 
                    value="<%= startDate || '' %>"
                    class="w-1/2 py-2 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                    placeholder="Start Date"
                >
                <input 
                    type="date" 
                    id="endDateFilter" 
                    value="<%= endDate || '' %>"
                    class="w-1/2 py-2 px-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                    placeholder="End Date"
                >
            </div>
        </div>
        
        <!-- Clear Filters Button -->
        <div class="md:w-32 flex items-end">
            <button 
                id="clearFilters" 
                class="w-full bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition-colors"
                style="<% if (!search && !status && !startDate && !endDate) { %>display: none;<% } %>"
            >
                <i class="fas fa-times mr-1"></i>
                Clear
            </button>
        </div>
    </div>
    
    <!-- Search Results Info -->
    <div id="searchInfo" class="mt-3 text-sm text-gray-600" <% if (!search && !status && !startDate && !endDate) { %>style="display: none;"<% } %>>
        <% if (search || status || startDate || endDate) { %>
            <i class="fas fa-info-circle mr-1"></i>
            Showing results 
            <% if (search) { %>for "<%= search %>"<% } %>
            <% if (status) { %>with status: <%= status %><% } %>
            <% if (startDate) { %>from <%= startDate %><% } %>
            <% if (endDate) { %>to <%= endDate %><% } %>
        <% } %>
    </div>
</div>

<!-- Loans Table -->
<div class="bg-white rounded-lg shadow overflow-hidden">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead>
                <tr class="bg-primary-light">
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">User</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Book</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Loan Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Return Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Due Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                <% if (loans && Array.isArray(loans) && loans.length > 0) { %>
                    <% loans.forEach(loan => { %>
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= loan.user_name || '-' %></td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= loan.book_name || '-' %></td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= loan.loans_date ? new Date(loan.loans_date).toLocaleDateString('id-ID', { day: 'numeric', month: 'long', year: 'numeric' }) : '-' %></td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= loan.return_date ? new Date(loan.return_date).toLocaleDateString('id-ID', { day: 'numeric', month: 'long', year: 'numeric' }) : '-' %></td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= loan.due_date ? new Date(loan.due_date).toLocaleDateString('id-ID', { day: 'numeric', month: 'long', year: 'numeric' }) : '-' %></td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= loan.status === 'borrowed' ? 'bg-yellow-100 text-yellow-800' : loan.status === 'returned' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                    <%= loan.status.charAt(0).toUpperCase() + loan.status.slice(1) %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <div class="flex space-x-2">
                                    <button 
                                        class="edit-btn text-primary hover:text-primary-dark" 
                                        title="Edit"
                                        data-id="<%- loan.id %>"
                                        data-user_id="<%- loan.user_id %>"
                                        data-book_id="<%- loan.book_id %>"
                                        data-loans_date="<%- loan.loans_date ? loan.loans_date.toISOString().split('T')[0] : '' %>"
                                        data-return_date="<%- loan.return_date ? loan.return_date.toISOString().split('T')[0] : '' %>"
                                        data-due_date="<%- loan.due_date ? loan.due_date.toISOString().split('T')[0] : '' %>"
                                        data-status="<%- loan.status %>">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button onclick="confirmDelete('<%- loan.id %>')" class="text-red-600 hover:text-red-800" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr>
                        <td colspan="7" class="px-6 py-4 text-center text-sm text-gray-500">
                            No loans found
                        </td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <% if (totalPages > 1) { %>
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="flex-1 flex justify-between sm:hidden">
                <% if (currentPage > 1) { %>
                    <% 
                        let prevUrl = '?page=' + (currentPage - 1);
                        if (search) prevUrl += '&search=' + encodeURIComponent(search);
                        if (status) prevUrl += '&status=' + encodeURIComponent(status);
                    %>
                    <a href="<%= prevUrl %>" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Previous
                    </a>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <% 
                        let nextUrl = '?page=' + (currentPage + 1);
                        if (search) nextUrl += '&search=' + encodeURIComponent(search);
                        if (status) nextUrl += '&status=' + encodeURIComponent(status);
                    %>
                    <a href="<%= nextUrl %>" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Next
                    </a>
                <% } %>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing page <span class="font-medium"><%= currentPage %></span> of <span class="font-medium"><%= totalPages %></span>
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        <% if (currentPage > 1) { %>
                            <% 
                                let prevUrl = '?page=' + (currentPage - 1);
                                if (search) prevUrl += '&search=' + encodeURIComponent(search);
                                if (status) prevUrl += '&status=' + encodeURIComponent(status);
                            %>
                            <a href="<%= prevUrl %>" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        <% } %>
                        
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <% 
                                let pageUrl = '?page=' + i;
                                if (search) pageUrl += '&search=' + encodeURIComponent(search);
                                if (status) pageUrl += '&status=' + encodeURIComponent(status);
                            %>
                            <a href="<%= pageUrl %>" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium <%= currentPage === i ? 'text-primary-dark bg-primary-light z-10' : 'text-gray-500 hover:bg-gray-50' %>">
                                <%= i %>
                            </a>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <% 
                                let nextUrl = '?page=' + (currentPage + 1);
                                if (search) nextUrl += '&search=' + encodeURIComponent(search);
                                if (status) nextUrl += '&status=' + encodeURIComponent(status);
                            %>
                            <a href="<%= nextUrl %>" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        <% } %>
                    </nav>
                </div>
            </div>
        </div>
    <% } %>
</div>

<!-- Create Loan Modal -->
<div id="createModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-10 mx-auto p-6 border w-full max-w-4xl shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg leading-6 font-medium text-gray-900 mb-6">Create New Loan</h3>
            <form id="createForm" action="/dashboard/loans" method="POST" class="mt-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Section 1: Loan Information -->
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <h4 class="text-md font-semibold text-gray-800 mb-4">Loan Information</h4>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="user_id">
                                    User *
                                </label>
                                <select name="user_id" id="user_id" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="">Select User</option>
                                    <% users.forEach(user => { %>
                                        <option value="<%= user.id %>"><%= user.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="book_id">
                                    Book *
                                </label>
                                <select name="book_id" id="book_id" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="">Select Book</option>
                                    <% books.forEach(book => { %>
                                        <option value="<%= book.id %>"><%= book.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="loans_date">
                                    Loan Date *
                                </label>
                                <input type="date" name="loans_date" id="loans_date" required
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" value="<%= new Date().toISOString().split('T')[0] %>">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="loan_duration">
                                    Loan Duration (days) *
                                </label>
                                <input type="number" name="loan_duration" id="loan_duration" min="1" value="7" required
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="return_date">
                                    Return Date
                                </label>
                                <input type="date" name="return_date" id="return_date"
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="due_date">
                                    Due Date *
                                </label>
                                <input type="date" name="due_date" id="due_date" required readonly
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline bg-gray-100 cursor-not-allowed">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="status">
                                    Status *
                                </label>
                                <select name="status" id="status" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="borrowed" selected>Borrowed</option>
                                    <option value="returned">Returned</option>
                                    <option value="overdue">Overdue</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="flex items-center justify-between mt-6 pt-4 border-t">
                    <button type="button" onclick="closeCreateModal()"
                            class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        Cancel
                    </button>
                    <button type="submit"
                            class="bg-primary hover:bg-primary-dark text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        Create Loan
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Auto-calculate due_date and return_date based on loans_date + loan_duration
    document.addEventListener('DOMContentLoaded', function() {
        const loansDateInput = document.getElementById('loans_date');
        const loanDurationInput = document.getElementById('loan_duration');
        const dueDateInput = document.getElementById('due_date');
        const returnDateInput = document.getElementById('return_date');

        function calculateDueDateAndReturnDate() {
            const loansDateValue = loansDateInput.value;
            const loanDurationValue = parseInt(loanDurationInput.value, 10);

            if (loansDateValue && loanDurationValue && loanDurationValue > 0) {
                const loansDate = new Date(loansDateValue);
                loansDate.setDate(loansDate.getDate() + loanDurationValue);
                const dueDateStr = loansDate.toISOString().split('T')[0];
                dueDateInput.value = dueDateStr;

                // Auto-fill return_date as due_date initially
                if (!returnDateInput.value) {
                    returnDateInput.value = dueDateStr;
                }
            } else {
                dueDateInput.value = '';
                returnDateInput.value = '';
            }
        }

        loansDateInput.addEventListener('change', calculateDueDateAndReturnDate);
        loanDurationInput.addEventListener('input', calculateDueDateAndReturnDate);

        // Initial calculation on page load
        calculateDueDateAndReturnDate();
    });
</script>

<!-- Edit Loan Modal -->
<div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-10 mx-auto p-6 border w-full max-w-4xl shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg leading-6 font-medium text-gray-900 mb-6">Edit Loan</h3>
            <form id="editForm" action="" method="POST" class="mt-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Section 1: Loan Information -->
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <h4 class="text-md font-semibold text-gray-800 mb-4">Loan Information</h4>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_user_id">
                                    User *
                                </label>
                                <select name="user_id" id="edit_user_id" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="">Select User</option>
                                    <% users.forEach(user => { %>
                                        <option value="<%= user.id %>"><%= user.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_book_id">
                                    Book *
                                </label>
                                <select name="book_id" id="edit_book_id" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="">Select Book</option>
                                    <% books.forEach(book => { %>
                                        <option value="<%= book.id %>"><%= book.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_loans_date">
                                    Loan Date *
                                </label>
                                <input type="date" name="loans_date" id="edit_loans_date" required
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_return_date">
                                    Return Date
                                </label>
                                <input type="date" name="return_date" id="edit_return_date"
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_due_date">
                                    Due Date *
                                </label>
                                <input type="date" name="due_date" id="edit_due_date" required
                                       class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                            </div>
                            <div>
                                <label class="block text-gray-700 text-sm font-bold mb-2" for="edit_status">
                                    Status *
                                </label>
                                <select name="status" id="edit_status" required
                                        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                    <option value="borrowed">Borrowed</option>
                                    <option value="returned">Returned</option>
                                    <option value="overdue">Overdue</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="flex items-center justify-between mt-6 pt-4 border-t">
                    <button type="button" onclick="closeEditModal()"
                            class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        Cancel
                    </button>
                    <button type="submit"
                            class="bg-primary hover:bg-primary-dark text-white font-bold py-2 px-6 rounded focus:outline-none focus:shadow-outline">
                        Update Loan
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Delete Loan</h3>
            <div class="mt-2 px-7 py-3">
                <p class="text-sm text-gray-500">
                    Are you sure you want to delete this loan? This action cannot be undone.
                </p>
            </div>
            <div class="flex items-center justify-center mt-6 space-x-4">
                <button onclick="closeDeleteModal()"
                        class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                    Cancel
                </button>
                <form id="deleteForm" action="" method="POST" class="inline">
                    <button type="submit"
                            class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                        Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Flash Messages Data -->
<script id="flash-data" type="application/json">
<%- JSON.stringify({
    success: (typeof messages !== 'undefined' && messages.success) || [],
    error: (typeof messages !== 'undefined' && messages.error) || []
}) %>
</script>

<script>
    // Create Modal Functions
    function openCreateModal() {
        document.getElementById('createModal').classList.remove('hidden');
    }

    function closeCreateModal() {
        document.getElementById('createModal').classList.add('hidden');
    }

    // Edit Modal Functions
    function openEditModal(button) {
        const form = document.getElementById('editForm');
        form.action = '/dashboard/loans/' + button.dataset.id + '/update';
        
        document.getElementById('edit_user_id').value = button.dataset.user_id;
        document.getElementById('edit_book_id').value = button.dataset.book_id;
        document.getElementById('edit_loans_date').value = button.dataset.loans_date;
        document.getElementById('edit_return_date').value = button.dataset.return_date;
        document.getElementById('edit_due_date').value = button.dataset.due_date;
        document.getElementById('edit_status').value = button.dataset.status;
        
        document.getElementById('editModal').classList.remove('hidden');
    }

    function closeEditModal() {
        document.getElementById('editModal').classList.add('hidden');
    }

    // Delete Modal Functions
    function confirmDelete(loanId) {
        const form = document.getElementById('deleteForm');
        form.action = '/dashboard/loans/' + loanId + '/delete';
        document.getElementById('deleteModal').classList.remove('hidden');
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').classList.add('hidden');
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
        const modals = [
            document.getElementById('createModal'),
            document.getElementById('editModal'),
            document.getElementById('deleteModal')
        ];
        
        modals.forEach(modal => {
            if (event.target === modal) {
                modal.classList.add('hidden');
            }
        });
    }

    // Add event listeners when document is ready
    document.addEventListener('DOMContentLoaded', function() {
        // Live Search and Filter Functionality
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const clearFiltersBtn = document.getElementById('clearFilters');
        let searchTimeout;

        // Handle search input with debouncing
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                updateFilters();
            }, 300);
        });

        // Handle status filter change
        statusFilter.addEventListener('change', function() {
            updateFilters();
        });

        // Handle date filter change
        const startDateFilter = document.getElementById('startDateFilter');
        const endDateFilter = document.getElementById('endDateFilter');

        startDateFilter.addEventListener('change', function() {
            updateFilters();
        });

        endDateFilter.addEventListener('change', function() {
            updateFilters();
        });

        // Handle clear filters
        clearFiltersBtn.addEventListener('click', function() {
            searchInput.value = '';
            statusFilter.value = '';
            startDateFilter.value = '';
            endDateFilter.value = '';
            updateFilters();
        });

        // Function to update filters and reload page with new parameters
        function updateFilters() {
            const searchValue = searchInput.value.trim();
            const statusValue = statusFilter.value;
            const startDateValue = startDateFilter.value;
            const endDateValue = endDateFilter.value;
            
            let url = new URL(window.location.href);
            url.searchParams.set('page', '1'); // Reset to first page when filtering
            
            if (searchValue) {
                url.searchParams.set('search', searchValue);
            } else {
                url.searchParams.delete('search');
            }
            
            if (statusValue) {
                url.searchParams.set('status', statusValue);
            } else {
                url.searchParams.delete('status');
            }

            if (startDateValue) {
                url.searchParams.set('startDate', startDateValue);
            } else {
                url.searchParams.delete('startDate');
            }

            if (endDateValue) {
                url.searchParams.set('endDate', endDateValue);
            } else {
                url.searchParams.delete('endDate');
            }
            
            window.location.href = url.toString();
        }

        const editButtons = document.querySelectorAll('.edit-btn');
        editButtons.forEach(button => {
            button.addEventListener('click', function() {
                openEditModal(this);
            });
        });

        // Handle flash messages
        const flashData = JSON.parse(document.getElementById('flash-data').textContent);
        
        if (flashData.success && flashData.success.length > 0) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: flashData.success[0],
                confirmButtonColor: '#FFB823'
            });
        }

        if (flashData.error && flashData.error.length > 0) {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: flashData.error[0],
                confirmButtonColor: '#FFB823'
            });
        }
    });
</script>
